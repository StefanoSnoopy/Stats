#!/bin/bash

source config.ini

# Create crontab and monthly file
cd $PATH_TO_STATS && rm -f *.default
cp $PATH_TO_STATS/default_files/crontab.txt.default $PATH_TO_STATS/crontab.txt
mkdir -p $PATH_TO_STATS/sql_cron
cd $PATH_TO_STATS/sql_cron && rm -f *.default
cp $PATH_TO_STATS/default_files/month.sh.default $PATH_TO_STATS/sql_cron/month.sh
PATH_TO_STATS2=$(sed 's@/@\\/@g' <<< $PATH_TO_STATS)
cd $PATH_TO_STATS && sed -i "s/pathToStats/$PATH_TO_STATS2/g" *.txt
cd $PATH_TO_STATS && sed -i "s/STATS_DB/$STATS_DB/g" *.txt

if [ -z "$SQL_password" ]
then
  sed -i "s/userpass/-h$DB_IP -P$DB_PORT -u$SQL_user/g" $PATH_TO_STATS/crontab.txt
  sed -i "s/userpass/-h$DB_IP -P$DB_PORT -u$SQL_user/g" $PATH_TO_STATS/sql_cron/month.sh
else
  sed -i "s/userpass/-h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password/g" $PATH_TO_STATS/crontab.txt
  sed -i "s/userpass/-h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password/g" $PATH_TO_STATS/sql_cron/month.sh
fi

if "$SPAWN_CLEANUP"
then
  sed -i "s/#SPAWN_CLEANUP#//g" $PATH_TO_STATS/crontab.txt
  sed -i "s/SPAWN_CLEAN_MIN/$SPAWN_CLEAN_MIN/g" $PATH_TO_STATS/crontab.txt
  sed -i "s/SPAWN_CLEAN_HR/$SPAWN_CLEAN_HR/g" $PATH_TO_STATS/crontab.txt
fi

# Create Area files
cd $PATH_TO_STATS/sql_cron && rm -f *.sql && rm -f *.default
for area in "$PATH_TO_STATS"areas/*.ini
do
  echo "$area"
  source $area
  cp $PATH_TO_STATS/default_files/15_area.sql.default $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  sed -i "s/Alphen/$AREA_NAME/g" $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  sed -i "s/51.491/$MAX_LAT/g" $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  sed -i "s/51.471/$MIN_LAT/g" $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  sed -i "s/4.946/$MIN_LON/g" $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  sed -i "s/4.973/$MAX_LON/g" $PATH_TO_STATS/sql_cron/15_"$AREA_NAME"_area.sql
  cp $PATH_TO_STATS/default_files/60_area.sql.default $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  sed -i "s/Alphen/$AREA_NAME/g" $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  sed -i "s/51.491/$MAX_LAT/g" $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  sed -i "s/51.471/$MIN_LAT/g" $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  sed -i "s/4.946/$MIN_LON/g" $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  sed -i "s/4.973/$MAX_LON/g" $PATH_TO_STATS/sql_cron/60_"$AREA_NAME"_area.sql
  cp $PATH_TO_STATS/default_files/1440_area.sql.default $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
  sed -i "s/Alphen/$AREA_NAME/g" $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
  sed -i "s/51.491/$MAX_LAT/g" $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
  sed -i "s/51.471/$MIN_LAT/g" $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
  sed -i "s/4.946/$MIN_LON/g" $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
  sed -i "s/4.973/$MAX_LON/g" $PATH_TO_STATS/sql_cron/1440_"$AREA_NAME"_area.sql
done

# Create sql table, trigger and procedure files
cp $PATH_TO_STATS/default_files/tables.sql.default $PATH_TO_STATS/tables.sql
cp $PATH_TO_STATS/default_files/triggers.sql.default $PATH_TO_STATS/triggers.sql
cp $PATH_TO_STATS/default_files/procedures.sql.default $PATH_TO_STATS/procedures.sql
cd $PATH_TO_STATS && sed -i "s/pogodb/$STATS_DB/g" *.sql

# Create cron files
cp $PATH_TO_STATS/default_files/15_area.sql.default $PATH_TO_STATS/sql_cron/15_area.sql.template
cp $PATH_TO_STATS/default_files/60_area.sql.default $PATH_TO_STATS/sql_cron/60_area.sql.template
cp $PATH_TO_STATS/default_files/1440_area.sql.default $PATH_TO_STATS/sql_cron/1440_area.sql.template
cp $PATH_TO_STATS/default_files/10080_area.sql.default $PATH_TO_STATS/sql_cron/10080_area.sql
cp $PATH_TO_STATS/default_files/15_worker.sql.default $PATH_TO_STATS/sql_cron/15_worker.sql
cp $PATH_TO_STATS/default_files/60_worker.sql.default $PATH_TO_STATS/sql_cron/60_worker.sql
cp $PATH_TO_STATS/default_files/1440_worker.sql.default $PATH_TO_STATS/sql_cron/1440_worker.sql
cp $PATH_TO_STATS/default_files/10080_worker.sql.default $PATH_TO_STATS/sql_cron/10080_worker.sql
cp $PATH_TO_STATS/default_files/pokemon_daily.sql.default $PATH_TO_STATS/sql_cron/pokemon_daily.sql
cp $PATH_TO_STATS/default_files/pokemon_hourly.sql.default $PATH_TO_STATS/sql_cron/pokemon_hourly.sql
cp $PATH_TO_STATS/default_files/spawn_cleanup.sql.default $PATH_TO_STATS/sql_cron/spawn_cleanup.sql
sed -i "s/pogodb/$STATS_DB/g" $PATH_TO_STATS/sql_cron/*.sql
sed -i "s/pogodb/$STATS_DB/g" $PATH_TO_STATS/sql_cron/*.template
sed -i "s/pogodb/$STATS_DB/g" $PATH_TO_STATS/sql_cron/*.sh
sed -i "s/rmdb/$MAD_DB/g" $PATH_TO_STATS/sql_cron/*.sql
sed -i "s/rmdb/$MAD_DB/g" $PATH_TO_STATS/sql_cron/*.template
sed -i "s/RPL15/$RPL15/g" $PATH_TO_STATS/sql_cron/*.sql
sed -i "s/RPL60/$RPL60/g" $PATH_TO_STATS/sql_cron/*.sql
sed -i "s/RPL1440/$RPL1440/g" $PATH_TO_STATS/sql_cron/*.sql
sed -i "s/RPL10080/$RPL10080/g" $PATH_TO_STATS/sql_cron/*.sql
sed -i "s/QUEST_START/$QUEST_START/g" $PATH_TO_STATS/sql_cron/*.sql
sed -i "s/QUEST_END/$QUEST_END/g" $PATH_TO_STATS/sql_cron/*.sql
sed -i "s/SPAWN_UNSEEN_DAYS/$SPAWN_UNSEEN_DAYS/g" $PATH_TO_STATS/sql_cron/*.sql
sed -i "s/SPAWN_NO_ENDTIME_DAYS/$SPAWN_NO_ENDTIME_DAYS/g" $PATH_TO_STATS/sql_cron/*.sql
sed -i "s/PATH_TO_STATS/$PATH_TO_STATS2/g" $PATH_TO_STATS/sql_cron/*.sh
sed -i "s/monsdb/$monthly_mon_database/g" $PATH_TO_STATS/sql_cron/*.sh

# Create grafana files
mkdir -p $PATH_TO_STATS/grafana
cd $PATH_TO_STATS/grafana/ && rm -f *.json && rm -f *.default
cp $PATH_TO_STATS/default_files/01_stats_kpi.json.default $PATH_TO_STATS/grafana/01_stats_kpi.json
cp $PATH_TO_STATS/default_files/02_stats_network_area.json.default $PATH_TO_STATS/grafana/02_stats_network_area.json
cp $PATH_TO_STATS/default_files/03_stats_network_area_ex.json.default $PATH_TO_STATS/grafana/03_stats_network_area_ex.json
cp $PATH_TO_STATS/default_files/04_stats_worker.json.default $PATH_TO_STATS/grafana/04_stats_worker.json
cp $PATH_TO_STATS/default_files/10_ATVdetails.json.default $PATH_TO_STATS/grafana/10_ATVdetails.json
cp $PATH_TO_STATS/default_files/11_stats_atvdetails_combined.json.default $PATH_TO_STATS/grafana/11_stats_atvdetails_combined.json
cp $PATH_TO_STATS/default_files/12_stats_atvdetails_combined_ex.json.default $PATH_TO_STATS/grafana/12_stats_atvdetails_combined_ex.json
cp $PATH_TO_STATS/default_files/20_mad_stuff.json.default $PATH_TO_STATS/grafana/20_mad_stuff.json
cd $PATH_TO_STATS/grafana/ && sed -i "s/pogodb/$DataSource_stats/g" *.json
cd $PATH_TO_STATS/grafana/ && sed -i "s/rmdb/$DataSource_MAD/g" *.json

# pokemon_history settings
if "$mon_backup"
then sed -i "s/--mon_backup-- //g" $PATH_TO_STATS/sql_cron/pokemon_daily.sql
fi

if "$mon_cleanup"
then sed -i "s/--mon_cleanup-- //g" $PATH_TO_STATS/sql_cron/pokemon_daily.sql 
     sed -i "s/--days_to_keep--/$days_to_keep/g" $PATH_TO_STATS/sql_cron/pokemon_daily.sql
fi

if "$monthly_mon_table"
then sed -i "s/#monthly#//g" $PATH_TO_STATS/crontab.txt
fi

# set MAD clean tables
if "$pokemon"
then sed -i "s/--pokemon-- //g" $PATH_TO_STATS/sql_cron/pokemon_hourly.sql
fi

if "$trs_stats_detect_raw"
then sed -i "s/--detect_raw-- //g" $PATH_TO_STATS/sql_cron/pokemon_hourly.sql
fi

if "$trs_stats_location_raw"
then sed -i "s/--location_raw-- //g" $PATH_TO_STATS/sql_cron/pokemon_hourly.sql
fi

if "$trs_stats_detect"
then sed -i "s/--detect-- //g" $PATH_TO_STATS/sql_cron/pokemon_daily.sql
fi

if "$trs_stats_location"
then sed -i "s/--location-- //g" $PATH_TO_STATS/sql_cron/pokemon_daily.sql
fi

if "$trs_usage"
then sed -i "s/--usage-- //g" $PATH_TO_STATS/sql_cron/pokemon_daily.sql
fi

# Create tables
if [ -z "$SQL_password" ]
then
  mysql -h$DB_IP -P$DB_PORT -u$SQL_user $STATS_DB < $PATH_TO_STATS/tables.sql
else
  mysql -h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password $STATS_DB < $PATH_TO_STATS/tables.sql
fi

# Create triggers
if [ -z "$SQL_password" ]
then
  mysql -h$DB_IP -P$DB_PORT -u$SQL_user $MAD_DB < $PATH_TO_STATS/triggers.sql
else
  mysql -h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password $MAD_DB < $PATH_TO_STATS/triggers.sql
fi

# Create procedure
if [ -z "$SQL_password" ]
then
  mysql -h$DB_IP -P$DB_PORT -u$SQL_user $MAD_DB < $PATH_TO_STATS/procedures.sql
else
  mysql -h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password $MAD_DB < $PATH_TO_STATS/procedures.sql
fi

#Check MAD collation, else 15_worker will fail
table_check=$(mysql $MAD_DB -h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password -se "SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, TABLE_COLLATION FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'rmdb' and (((TABLE_NAME = 'trs_stats_detect' or TABLE_NAME = 'trs_stats_location' or TABLE_NAME = 'trs_stats_loction_raw') and TABLE_COLLATION <>'utf8mb4_general_ci' ) or ((TABLE_NAME = 'trs_status' or TABLE_NAME = 'trs_stats_detect_mon_raw') and TABLE_COLLATION <> 'utf8mb4_unicode_ci'));")
column_check=$(mysql $MAD_DB -h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password -se "SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLLATION_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'rmdb' and (((TABLE_NAME = 'trs_stats_detect' or TABLE_NAME = 'trs_stats_location' or TABLE_NAME = 'trs_stats_loction_raw') and COLLATION_NAME <>'utf8mb4_general_ci' ) or ((TABLE_NAME = 'trs_status' or TABLE_NAME = 'trs_stats_detect_mon_raw') and COLLATION_NAME <> 'utf8mb4_unicode_ci'));")

echo 'Checking MAD collation'
echo ''
if [[ -z $table_check || -z $column_check ]]; then
  echo 'MAD table/column collation set correctly'
  else
  echo '(some) MAD table/column collation set incorrect'
  echo 'Check https://github.com/Map-A-Droid/MAD/tree/master/scripts/SQL and adapt accordingly'
  mysql $MAD_DB -h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password -se "SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, TABLE_COLLATION FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'rmdb' and (((TABLE_NAME = 'trs_stats_detect' or TABLE_NAME = 'trs_stats_location' or TABLE_NAME = 'trs_stats_loction_raw') and TABLE_COLLATION <>'utf8mb4_general_ci' ) or ((TABLE_NAME = 'trs_status' or TABLE_NAME = 'trs_stats_detect_mon_raw') and TABLE_COLLATION <> 'utf8mb4_unicode_ci'));"
  mysql $MAD_DB -h$DB_IP -P$DB_PORT -u$SQL_user -p$SQL_password -se "SELECT TABLE_CATALOG, TABLE_SCHEMA, TABLE_NAME, COLUMN_NAME, COLLATION_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = 'rmdb' and (((TABLE_NAME = 'trs_stats_detect' or TABLE_NAME = 'trs_stats_location' or TABLE_NAME = 'trs_stats_loction_raw') and COLLATION_NAME <>'utf8mb4_general_ci' ) or ((TABLE_NAME = 'trs_status' or TABLE_NAME = 'trs_stats_detect_mon_raw') and COLLATION_NAME <> 'utf8mb4_unicode_ci'));"
fi
echo ''
