set collation_connection = 'utf8mb4_unicode_ci';
SET SESSION tx_isolation = 'READ-UNCOMMITTED';
-- Settings

select @Start := concat(date(now() - interval 15 minute),' ', SEC_TO_TIME((TIME_TO_SEC(time(now() - interval 15 minute)) DIV 900) * 900));
select @Stop := concat(date(now() - interval 0 minute),' ', SEC_TO_TIME((TIME_TO_SEC(time(now() - interval 0 minute)) DIV 900) * 900));
select @RPL := '15';
select @Area := 'Alphen';
select @Fence_name := 'Fency';
select @Fence := st_geomfromtext('POLYGON((FENCE_COORDS))');

-- Get Pokemon data
Create TEMPORARY TABLE rmdb.tmp50
(INDEX (spawnpoint_id))
AS(
select a.spawnpoint_id, least(IFNULL(a.encounter,a.wild),a.wild) as `first_scanned_adapted`, disappear_time, a.individual_attack, a.individual_defense, a.individual_stamina, a.first_scanned, a.encounter, a.wild, a.nearby_stop, a.nearby_cell, a.lure_encounter, a.lure_wild
from pogodb.pokemon_history_temp a
where
least(IFNULL(a.encounter,a.wild),a.wild) >= @Start and
least(IFNULL(a.encounter,a.wild),a.wild) < @Stop and
ST_CONTAINS(@Fence, point(a.latitude,a.longitude))
);

-- Get Spawnpoint data
Create TEMPORARY TABLE rmdb.tmp51
(INDEX (spawnpoint))
AS(
select a.spawnpoint, a.last_scanned, a.first_detection, a.last_non_scanned, a.spawndef, a.eventid
from rmdb.trs_spawn a
where
ST_CONTAINS(@Fence, point(a.latitude,a.longitude))
);

-- Initial insert
INSERT INTO pogodb.stats_area (Datetime,RPL, TRPL, Area, Fence)
select @Start, @RPL, @RPL, @Area, @Fence_name;

-- Update Pokemon Data
update pogodb.stats_area
set 
Spawnpoints = (select count(distinct(spawnpoint_id)) from rmdb.tmp50),
Mons_all = (select count(first_scanned_adapted) from rmdb.tmp50),
MonsIV = (select count(first_scanned_adapted) from rmdb.tmp50 where individual_attack is not NULL),
Mons_nonIV = Mons_all-MonsIV,
Iv100 = (select count(first_scanned_adapted) from rmdb.tmp50 where individual_attack = 15 and individual_defense = 15 and individual_stamina = 15),
Iv0 = (select count(first_scanned_adapted) from rmdb.tmp50 where individual_attack = 0 and individual_defense = 0 and individual_stamina = 0)
where
pogodb.stats_area.Area = @Area and
pogodb.stats_area.Fence = @Fence_name and
pogodb.stats_area.RPL = @RPL and
pogodb.stats_area.Datetime = @Start
;

-- update detect_seen data
update pogodb.stats_area
set
numWi_En = (select count(spawnpoint_id) from rmdb.tmp50 where encounter >= wild + interval 15 second),
timeWi_En = (select sum(timestampdiff(second,wild,encounter)) from rmdb.tmp50 where encounter >= wild + interval 15 second),
numNeSp_Wi = (select count(spawnpoint_id) from rmdb.tmp50 where wild >= nearby_stop + interval 15 second),
timeNeSp_Wi = (select sum(timestampdiff(second,nearby_stop,wild)) from rmdb.tmp50 where wild >= nearby_stop + interval 15 second),
numNeSp_En = (select count(spawnpoint_id) from rmdb.tmp50 where encounter >= nearby_stop + interval 15 second),
timeNeSp_En = (select sum(timestampdiff(second,nearby_stop,encounter)) from rmdb.tmp50 where encounter >= nearby_stop + interval 15 second),
numNeCl_Wi = (select count(spawnpoint_id) from rmdb.tmp50 where wild >= nearby_cell + interval 15 second),
timeNeCl_Wi = (select sum(timestampdiff(second,nearby_cell,wild)) from rmdb.tmp50 where wild >= nearby_cell + interval 15 second),
numNeCl_En = (select count(spawnpoint_id) from rmdb.tmp50 where encounter >= nearby_cell + interval 15 second),
timeNeCl_En = (select sum(timestampdiff(second,nearby_cell,encounter)) from rmdb.tmp50 where encounter >= nearby_cell + interval 15 second)
where
pogodb.stats_area.Area = @Area and
pogodb.stats_area.Fence = @Fence_name and
pogodb.stats_area.RPL = @RPL and
pogodb.stats_area.Datetime = @Start
;


-- update spawnpoint data
update pogodb.stats_area
set
DBspawns = (select count(*) from rmdb.tmp51),
DBspawns_event = (select count(*) from rmdb.tmp51 where eventid in (select id from rmdb.trs_event where @Start >= event_start and @Start < event_end)),
Spawn_add = (select count(*) from rmdb.tmp51 where first_detection >= @Start and first_detection < @Stop),
Spawn_NULL = (select count(*) from rmdb.tmp51 where last_scanned is NULL),
Last_scanned_today_acc = (select count(*) from rmdb.tmp51 where date(last_non_scanned) = date(@Start)),
Last_scanned_1d = (select count(*) from rmdb.tmp51 where date(last_non_scanned) = date(@Start) - interval 1 day),
Last_scanned_2d = (select count(*) from rmdb.tmp51 where date(last_non_scanned) = date(@Start) - interval 2 day),
Last_scanned_3d = (select count(*) from rmdb.tmp51 where date(last_non_scanned) = date(@Start) - interval 3 day),
Last_scanned_7dp = (select count(*) from rmdb.tmp51 where date(last_non_scanned) < date(@Start) - interval 7 day)
where
pogodb.stats_area.Area = @Area and
pogodb.stats_area.Fence = @Fence_name and
pogodb.stats_area.RPL = @RPL and
pogodb.stats_area.Datetime = @Start
;

-- update spawndef + minutes remaining + avg despawn time FOR seen spawns/pokes
update pogodb.stats_area
set 
Spawndef15 = (select count(b.spawnpoint) from rmdb.tmp50 a, rmdb.tmp51 b where a.spawnpoint_id = b.spawnpoint and b.spawndef = 15),
SpawndefNot15 = (select count(b.spawnpoint) from rmdb.tmp50 a, rmdb.tmp51 b where a.spawnpoint_id = b.spawnpoint and b.spawndef <> 15),
MinutesLeft = (select sum(timestampdiff(minute,first_scanned_adapted,disappear_time)) from rmdb.tmp50),
AvgMinutesLeft = (select round(avg(timestampdiff(minute,first_scanned_adapted,disappear_time))) from rmdb.tmp50),
w5 = (select count(b.spawnpoint) from rmdb.tmp50 a, rmdb.tmp51 b where a.spawnpoint_id = b.spawnpoint and ((b.spawndef <> 15 and timestampdiff(second,first_scanned_adapted,disappear_time) >= 1500) or(b.spawndef = 15 and timestampdiff(second,first_scanned_adapted,disappear_time) >= 3300))),
w10 = (select count(b.spawnpoint) from rmdb.tmp50 a, rmdb.tmp51 b where a.spawnpoint_id = b.spawnpoint and ((b.spawndef <> 15 and timestampdiff(second,first_scanned_adapted,disappear_time) >= 1200) or(b.spawndef = 15 and timestampdiff(second,first_scanned_adapted,disappear_time) >= 3000))),
w15 = (select count(b.spawnpoint) from rmdb.tmp50 a, rmdb.tmp51 b where a.spawnpoint_id = b.spawnpoint and ((b.spawndef <> 15 and timestampdiff(second,first_scanned_adapted,disappear_time) >= 900) or(b.spawndef = 15 and timestampdiff(second,first_scanned_adapted,disappear_time) >= 2700))),
w20 = (select count(b.spawnpoint) from rmdb.tmp50 a, rmdb.tmp51 b where a.spawnpoint_id = b.spawnpoint and ((b.spawndef <> 15 and timestampdiff(second,first_scanned_adapted,disappear_time) >= 600) or(b.spawndef = 15 and timestampdiff(second,first_scanned_adapted,disappear_time) >= 2400)))
where
pogodb.stats_area.Area = @Area and
pogodb.stats_area.Fence = @Fence_name and
pogodb.stats_area.RPL = @RPL and
pogodb.stats_area.Datetime = @Start
;

-- drop tables
drop table rmdb.tmp50;
drop table rmdb.tmp51;
